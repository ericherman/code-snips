#!/bin/bash
GIT_VERSION=`git --version | cut -f3 -d' '`
GIT_MAJOR_VERSION=`echo "$GIT_VERSION" | cut -f1 -d'.'`
GIT_MINOR_VERSION=`echo "$GIT_VERSION" | cut -f2 -d'.'`
GIT_PATCH_VERSION=`echo "$GIT_VERSION" | cut -f3 -d'.'`

if [ $GIT_MAJOR_VERSION -gt 2 ]; then
	HAVE_MERGES=2
elif [ $GIT_MAJOR_VERSION -eq 2 -a $GIT_MINOR_VERSION -ge 18 ]; then
	HAVE_MERGES=2
elif [ $GIT_MAJOR_VERSION -eq 2 -a $GIT_MINOR_VERSION -ge 1 ]; then
	HAVE_MERGES=1
else
	HAVE_MERGES=0
fi

DARN=1;
while [ $DARN -ne 0 ]
do
  UNSTAGED_FILES=$(git status --untracked-files=no --short | wc --lines)
  if [ $UNSTAGED_FILES -ne 0 ]; then
      echo >&2 $'\x07'"Error: repository contains unstaged changes; exiting."
      exit 1
  fi

  if [ $HAVE_MERGES -eq 2 ]; then
      git pull --rebase=merges && git push; DARN=$?
  elif [ $HAVE_MERGES -eq 1 ]; then
      git pull --rebase=preserve && git push; DARN=$?
  else
      git fetch && git rebase --preserve-merges && git push; DARN=$?
  fi
done
